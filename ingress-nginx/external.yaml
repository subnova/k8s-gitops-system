---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration-external
  namespace: ingress-nginx
  labels:
    app: ingress-nginx-external
    system: ingress
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services-external
  namespace: ingress-nginx
  labels:
    app: ingress-nginx-external
    system: ingress
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services-external
  namespace: ingress-nginx
  labels:
    app: ingress-nginx-external
    system: ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-external
  namespace: ingress-nginx 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx-external
      system: ingress
  template:
    metadata:
      labels:
        app: ingress-nginx-external
        system: ingress
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.18.0
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration-external
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services-external
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services-external
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-external
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --ingress-class=external
          securityContext:
            capabilities:
                drop:
                - ALL
                add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "500m"
              memory: "100Mi"
            limits:
              cpu: "1"
              memory: "250Mi"


